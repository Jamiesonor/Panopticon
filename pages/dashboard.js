import useSwr from 'swr'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import CurrentPrice from '../components/currentPrice'
import DataChart from '../components/dataChart'
import SocialChart from '../components/socialChart'
import Sentiment from '../components/sentiment'
import Github from '../components/github'
import Medium from '../components/medium'
import Anomaly from '../components/anomaly'
import { santimentQuery, socialQuery, githubQuery, marketQuery, anomalyQuery } from '../utils/queries'
import { GraphQLClient, request } from 'graphql-request'
import { formatChart } from '../utils/formatChart'
import { formatSocial } from '../utils/formatSocial'
import { sentimentScore } from '../utils/sentimentScore'
import { TwitterTimelineEmbed } from 'react-twitter-embed'
import { Container, Row, Col, Spacer, Loading, Text, Card, Collapse } from '@nextui-org/react'

const client = new GraphQLClient(process.env.NEXT_PUBLIC_GITHUB_API_ENDPOINT);

const fetcherSantiment = query => request(process.env.NEXT_PUBLIC_SANTIMENT_API_ENDPOINT, query);
const fetcherGithub = (query, headers) => client.request({document: query, requestHeaders: headers});
const fetcherMedium = url => fetch(url).then(r => r.json());

const githubToken = {
  authorization: 'Bearer ' + process.env.NEXT_PUBLIC_GITHUB_API_KEY,
};

export default function Dashboard() {

  const { data, error } = useSwr(santimentQuery, fetcherSantiment);
  const { data: socialData, error: socialError } = useSwr(socialQuery, fetcherSantiment);
  const { data: marketData, error: marketError } = useSwr(marketQuery, fetcherSantiment);
  const { data: githubData, error: githubError } = useSwr([githubQuery, githubToken], fetcherGithub);
  const { data: mediumData, error: mediumError } = useSwr(process.env.NEXT_PUBLIC_MEDIUM_API_ENDPOINT, fetcherMedium);
  const { data: anomalyData, error: anomalyError } = useSwr(anomalyQuery, fetcherSantiment);

  console.log( {data, error} );
  console.log( {socialData, socialError} );
  console.log( {marketData, marketError} );
  console.log( {githubData, githubError} );
  console.log( {mediumData, mediumError} );
  console.log( {anomalyData, anomalyError} );

  if (error || socialError || marketError || githubError || mediumError || anomalyError) return <div>failed to load</div>
  if (!data || !socialData || !marketData || !githubData || !mediumData || !anomalyData) return (
    <div className={styles.container}>
      <div className={styles.main}>
        <Loading size="xl" color="success"><div style={{padding: "0.5rem 0"}}>Crunching numbers...</div></Loading>
      </div>
    </div>
  )

  // if (error || githubError || mediumError) return <div>failed to load</div>
  // if (!data || !githubData || !mediumData) return (
  //   <div className={styles.container}>
  //     <div className={styles.main}>
  //       <Loading size="xl" color="success"><div style={{padding: "0.5rem 0"}}>Crunching numbers...</div></Loading>
  //     </div>
  //   </div>
  // )

  let formattedChartData = formatChart(data);
  let formattedSocialData = formatSocial(socialData);

  let scores = [];
  let tmp = data.Sentiment.timeseriesData.slice(-30);
  for (let i = 0; i < tmp.length; i++) {
    scores.push(tmp[i].value);
  }

  return (
    <>
      <div className={styles.bgWrap}>
        <Image
          src="/theming-gradient.svg"
          layout="fill"
          objectFit="cover"
          quality={100}
        />
      </div>
      <div className={styles.container}>
        <Head>
          <title>Panopticon</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/pentagon.png" />
        </Head>

        <Container fluid gap={0} style={{padding: "2rem 0px"}} responsive={false}>
          <Row gap={1} style={{width: "auto"}}>
            <Col span={2}>
              <Card className={styles.card}>
                <div style={{padding: ".5rem 0", overflowX: "hidden"}}>
                  <h3 style={{display: "flex", justifyContent: "center", alignItems: "center"}}>
                    <a href="http://pentagon.xyz" style={{color: "#ffffff", marginBottom: "20px", letterSpacing: "2px"}}>
                      <div style={{display: "inline-block", marginTop: "2px", marginInlineEnd: "10px"}}>
                        <Image 
                          src="/pentagon.png"
                          layout="intrinsic"
                          width={22}
                          height={22}
                        />
                      </div>
                      Panopticon
                    </a>
                  </h3>
                  <div style={{display: "flex", height: "1px", width: "100%", background: "linear-gradient(90deg, rgba(224, 225, 226, 0) 0%, rgb(224, 225, 226) 47.22%, rgba(224, 225, 226, 0.157) 94.44%)"}}></div>
                  <Collapse.Group className={styles.cardNoBg} shadow style={{marginTop: "40px"}}>
                    <Collapse title="Dashboard">
                    </Collapse>

                    <Collapse title="Financial">
                    </Collapse>

                    <Collapse title="Social">
                    </Collapse>

                    <Collapse title="Development">
                    </Collapse>

                    <Collapse title="Governance">
                    </Collapse>
                  </Collapse.Group>
                  <Spacer y={60} />
                </div>
              </Card>
            </Col>
            
            <Col>
              <Row>
                <Text
                  h2
                  size={40}
                  css={{
                    margin: "10px 0 0 20px",
                    textGradient: "112deg, $cyan500 -63.59%, $pink500 -20.3%, $blue500 70.46%"
                  }}
                  weight="bold"
                >
                  Rari Capital ($RGT)
                </Text>
              </Row>
              
              <Spacer y={1}/>
              
              <Row gap={0}>
                <Col>
                  <Card className={styles.card} hoverable>
                    <h3>Price</h3>
                    <CurrentPrice token="RGT-USD" />
                  </Card>
                </Col>
                <Spacer x={1}/>
                <Col>
                  <Card className={styles.card} hoverable>
                    <h3>Market Cap</h3>
                    ${marketData.getMetric.timeseriesData[1].value}
                  </Card>
                </Col>
                <Spacer x={1}/>
                <Col>
                  <Card className={styles.card} hoverable>
                    <h3>Volume - (24h)</h3>
                    ${data.Trade_Volume.timeseriesData.at(-1).value}
                  </Card>
                </Col>
                <Spacer x={1}/>
                <Col>
                  <Card className={styles.card} hoverable>
                    <h3>High / Low - (24h)</h3>
                    ${marketData.ohlc[1].highPriceUsd.toFixed(2)} / ${marketData.ohlc[1].lowPriceUsd.toFixed(2)}
                  </Card>
                </Col>
              </Row>
              
              <Spacer y={1}/>
              
              <Row>
                <Col span={10}>
                  <Card className={styles.card}>
                    <div style={{overflowX: "hidden"}}>
                      <DataChart data={formattedChartData} />
                    </div>
                  </Card>
                </Col>
                <Spacer x={1}/>
                <Col span={6}>
                  <Card className={styles.card}>
                    <Card className={styles.cardNoBg}>
                      <div style={{overflowX: "hidden"}}>
                        <SocialChart data={formattedSocialData} />
                      </div>
                    </Card>
                    <Spacer y={7}/>
                    <p>Social Metrics</p>
                  </Card>
                </Col>
              </Row>
              
              <Spacer y={1}/>
              
              <Row>
                <Col span={9}>
                  <Row>
                    <Col span={12}>
                      <Card className={styles.card}>
                        <p>Anomaly Detection</p>
                        <Anomaly data={anomalyData} />
                      </Card>
                    </Col>
                    
                    <Spacer x={1}/>
                    
                    <Col span={6}>
                      <Card className={styles.card} hoverable style={{alignItems: "center"}}>
                        <p>Sentiment Score</p>
                        <div style={{width: "200px", zIndex: "-1"}}>
                          <Sentiment data={scores} />
                        </div>
                        <Card className={styles.cardBg} style={{marginTop: "-100px"}} >
                          <div style={{height: "100px", display: "flex", flexDirection: "column", justifyContent: "center", alignItems: "center"}}>
                            <h1 style={{marginTop: "-15px"}}>{sentimentScore(scores)}% </h1>
                            <div style={{marginTop: "-15px"}}>(30d)</div>
                          </div>
                          
                        </Card>
                      </Card>
                    </Col>
                  </Row>
                
                  <Spacer y={1}/>
                
                  <Row>

                    <Col>
                      <Card className={styles.card}>
                        <p>Development Activity</p>
                        <Github data={githubData} />
                      </Card>
                    </Col>

                    <Spacer x={1}/>

                    <Col>
                      <Card className={styles.card}>
                        <p>Medium / Mirror Feed</p>
                        <Medium data={mediumData} />
                      </Card>
                    </Col>

                  </Row>
                    
                  <Spacer y={1}/>

                  <Row>
                    <Card className={styles.card}>
                      <p>Governance</p>
                      <Spacer y={1}/>
                    </Card>
                  </Row>

                </Col>
                
                <Spacer x={1}/>
                
                <Col span={3}>
                  <Card className={styles.card}>
                    <div style={{maxWidth: "none"}}>
                      <div style={{maxWidth: "none"}}>
                        <TwitterTimelineEmbed
                          noFooter
                          noScrollbar
                          transparent
                          onLoad={function noRefCheck(){}}
                          options={{
                            height: 1000
                          }}
                          screenName="RariCapital"
                          sourceType="profile"
                          theme="dark"
                        />
                      </div>
                    </div>
                  </Card>
                </Col>
              </Row>
              
            </Col>
          </Row>
        </Container>

      </div>
    </>
  )
}
